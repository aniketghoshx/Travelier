// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id              Int             @id @default(autoincrement())
  name            String
  email           String          @unique
  password        String
  phone           String  
  role            Role            @default(USER)
  reviews         Review[]
  bookings        Booking[]
}

model Tour{
  id              Int             @id @default(autoincrement())
  title           String
  description     String 
  destination     String
  duration        Int
  price           Int
  isActive        Boolean         @default(true)   
  images          TourImage[]
  bookings        Booking[] 
  reviews         Review[]  
}

model TourImage{
  id        Int       @id @default(autoincrement())
  tourId    Int
  imgUrl    String
  tour      Tour      @relation(fields: [tourId], references: [id])
}

model Booking{
  id              Int         @id @default(autoincrement())
  userId          Int
  tourId          Int
  amount          Int
  noOfTraveler    Int
  status          BookingStatus @default(Upcoming)
  bookingDate     String
  createdAt       DateTime    @default(now())
  payment         Payment?
  traveler        User        @relation(fields: [userId], references: [id])
  tour            Tour        @relation(fields: [tourId], references: [id])
}

model Payment{
  id              Int         @id @default(autoincrement())
  bookingId       Int         @unique
  transactionId   String    
  createdAt       DateTime    @default(now())
  booking         Booking     @relation(fields: [bookingId], references: [id])
}

model Review{
  id              Int         @id @default(autoincrement())
  userId          Int         
  tourId          Int
  rating          Int
  comment         String
  createdAt       DateTime    @default(now()) 
  user            User        @relation(fields: [userId], references: [id])
  tour            Tour        @relation(fields: [tourId], references: [id])
}

enum Role{
  USER
  ADMIN
}

enum BookingStatus{
  Upcoming
  Completed
  Cancelled
}